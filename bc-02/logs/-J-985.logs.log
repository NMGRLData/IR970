do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000247001647949
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.60283660889e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000104188919067
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.89437103271e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.89437103271e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.29560852051e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=9.20295715332e-05
executed snippet estimated_duration=108.0, duration=0.00769090652466
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00176811218262
executed snippet estimated_duration=4.0, duration=0.00347495079041
Script duration 648.0
Run total estimated duration= 649.000
run duration: 0:10:49
doing event level: 2
10:46:47 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4475714928
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bc-02-J-985
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bc-02-J-985
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
10:46:48 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.10532,-0.01071,0.05074,-0.04021,0.01697,0.00089
10:46:48 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
10:46:48 -- ******* Pre Extraction Check Passed *******
=================================================================================
10:46:48 -- stopping status monitor. block=True
stop 4938577584
Status monitor stopped
Status monitor finished
10:46:49 -- starting status monitor
start 4938577584
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 10:46:51.060322
Extraction Started jan_cocktail_x1.py
10:46:51 -- ******* Extraction Started jan_cocktail_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12db810b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000166893005371
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=7.89165496826e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=8.89301300049e-05
executed snippet estimated_duration=108.0, duration=0.0055558681488
Jan Cocktail Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0167551040649
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000109195709229
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
10:46:51 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
10:46:51 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=192.168.2.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
10:46:52 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
10:46:53 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
10:46:53 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=192.168.2.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
10:46:54 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
10:46:54 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=192.168.2.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
10:46:55 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=192.168.2.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
10:46:55 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=192.168.2.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
10:46:56 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=192.168.2.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
10:46:56 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=6.14736485481
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000109195709229
Evacuate Pipette 1
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
10:46:57 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
10:46:58 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
10:46:58 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
change switch state (True, True)
10:46:59 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0248191357
executed snippet estimated_duration=48.0, duration=17.8914411068
EvacPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.58306884766e-05
Fill Pipette 1
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
10:47:15 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling cocktail pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0647621155
close () {'description': 'Inner Pipette 1'}
close name=--- desc=Inner Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks X
interlocks ['W']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close X ===>> OK
GetIndicatorState X ===>> False
change switch state (True, True)
10:47:31 -- CLOSE  VALVE-X (Inner Pipette 1)
-------------------------- close None (Inner Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.856523037
FillPipette1.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.3936920166e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
10:47:33 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=192.168.2.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
10:47:33 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01040697098
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
10:47:36 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.49019789696
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000195026397705
Expand Pipette 1
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
10:47:36 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01164507866
open () {'description': 'Outer Pipette 1'}
open name=--- desc=Outer Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open W ===>> OK
GetIndicatorState W ===>> OK
change switch state (True, True)
10:47:39 -- OPEN   VALVE-W (Outer Pipette 1)
-------------------------- open None (Outer Pipette 1) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0134520531
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01197600365
executed snippet estimated_duration=57.0, duration=19.9264740944
ExpandPipette1.py completed successfully
gosub finished
executed snippet estimated_duration=108.0, duration=65.3483450413
jan_cocktail_x1.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-27T10:03:12',
                    'title': 'iServer Hum.',
                    'value': 22.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-27T10:47:48',
                     'title': None,
                     'value': 88.95},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-27T10:45:59',
                     'title': None,
                     'value': 92.32678}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-27T04:11:43',
                       'title': None,
                       'value': 69.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-27T10:18:24',
                       'title': 'iServer Temp.',
                       'value': 70.8},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-27T10:24:56',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
10:47:59 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
10:47:59 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 197.923274125618
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/Pychron/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0555 5.8790 5.9928 6.1940 6.2303 6.6793
Ar39     6.0104 5.7700 6.0569 6.3371 6.1130 6.5658
Ar36     5.6879 5.4390 5.7203 5.9960 5.7680 6.2169
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.699505585058
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=bc-02-J analysis type=blank_cocktail
Measurement Started jan_unknown400_120.py
10:47:59 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.96
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.035158395898
GetParameter Source Current Readback ===>> 552.536531770738
pre measurement save
New frame /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
testing...
no interpolation path defined
executed snippet estimated_duration=555.4, duration=0.000288009643555
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
creating plots for detectors [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
molweights={'Ar41': 41.0, 'Ar40': 39.9624, 'Ar42': 42.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'Ar38': 37.9627, 'Ar39': 38.964}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02963323e+00]
H1 map mass to dac 39.9624 >> 5.87904
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.87904) on H1
setting magnet DAC
current  : 5.879040
requested: 5.879040
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=False
SetMagnetDAC 5.87904 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 15.0}
Equilibration Started
10:48:00 -- ******* Equilibration Started *******
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x13facfb30>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x131b005f0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x13e4a3470>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
10:48:00 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
10:48:04 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 15.0sec
set_time_zero () {}
sniff (15.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
measuring sniff. ncounts=15.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
measurement period (ms) = 1048.576
Equilibration Finished
10:48:19 -- ******* Equilibration Finished *******
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
10:48:19 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
10:48:19 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149965286255
executed snippet estimated_duration=4.0, duration=0.01433801651
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000132083892822
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
10:48:20 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
action=close, ok=True, locked=[False]
measurement finished
is_closed ('F',) {}
estimated time: 15.729 actual time: :15.866
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
is F () closed?
set_fits () {}
is closed True
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
set "Ar41" to "('linear', 'SEM')"
checking ownership. requestor=192.168.2.150
set "Ar40" to "('Parabolic', 'SEM')"
check software interlocks A
set "Ar36" to "('Parabolic', 'SEM')"
interlocks []
actuate state mode=None-script, software_lock=False
set "Ar37" to "('linear', 'SEM')"
doing actuation None-script open_channel False
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
Open A ===>> OK
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
measuring signal. ncounts=400
GetIndicatorState A ===>> OK
change switch state (True, True)
10:48:20 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
measurement period (ms) = 1048.576
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=192.168.2.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
10:48:22 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=192.168.2.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
10:48:22 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=192.168.2.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
10:48:23 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=192.168.2.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
set states for children of T. state=True
refresh_canvas_needed fired
GetIndicatorState T ===>> OK
change switch state (True, True)
10:48:23 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=192.168.2.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
10:48:24 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.01022100449
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.10079956055e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
10:48:25 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=192.168.2.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
set states for children of I. state=True
refresh_canvas_needed fired
GetIndicatorState I ===>> OK
change switch state (True, True)
10:48:26 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
10:48:27 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
10:48:28 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=192.168.2.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
10:48:29 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
Join finished
block finished. duration 15.0862319469
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=192.168.2.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
10:48:44 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=192.168.2.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
10:48:45 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.6955649853
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=25.7413740158
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
10:48:45 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
10:48:46 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
10:49:12 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
10:49:38 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009452308721554165}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.009014852751811428}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00843962902141491}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.008177254748710372}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007892188520482549}"
10:50:05 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007641952121073977}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007217482292112757}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0069557128752748025}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006719547324773927}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006393565538500664}"
10:50:31 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006282066710652847}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006177167456539136}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006101026519060526}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005995684440462963}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005858870725005444}"
10:50:57 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005675704539426342}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005454196717174787}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005275043744629238}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005218166566949904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005076182002812788}"
10:51:23 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004882657107894671}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004856850918975712}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004919680932487695}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004890146254377559}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0047715341491999415}"
10:51:50 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004699187040186381}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004697904750179606}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004516136234986756}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004378242611084311}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004404909414761052}"
10:52:16 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004308783001647491}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0043566622202956895}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004247995318429953}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004239182040726686}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0042694075852351444}"
10:52:42 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004209273312601759}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004205313933757682}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004151231480316605}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004111663232386246}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0040710122582463485}"
10:53:09 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00404523053077975}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003998204662964068}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003931603257333736}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0039026971070775566}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003888947100515562}"
10:53:35 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0038702865952864986}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003878293683457543}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003857737099724592}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003856489608875418}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003821530869014748}"
10:54:01 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003791940130742221}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0037968680499826466}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0037479356894353144}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003673021610870924}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003686591015618769}"
10:54:27 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036484670327068184}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036717323494078248}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036504767982149344}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036342453304886715}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036053714527793427}"
10:54:54 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0035855924804988693}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0035909625079786523}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0035854853097177604}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0035760053377971467}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05956853626585682}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036047896881471605}"
10:55:20 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.384
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02963323e+00]
H1 map mass to dac 34.2 >> 5.24115160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.24115160773) on H1
setting magnet DAC
current  : 5.879040
requested: 5.241152
Delta Dac: 0.637888
Checking detector protection. dv=0.63789
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
AF Demag not enabled. self.use_af_demag=False, use_af_demag=False
SetMagnetDAC 5.24115160773 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
measurement period (ms) = 1048.576
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04061786399724996}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0531729975871205}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05799551642685651}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.061031346924203186}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.061170749058246286}"
10:56:05 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05419151403643761}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.056616066656526305}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.051400513227551445}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0513957564346186}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.051739166827536764}"
10:56:31 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.051929742345104335}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05330143024462659}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0539435830877886}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05353188886824678}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.054729710283359746}"
10:56:57 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05670125043007177}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036095286167455547}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05739525717051541}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036101992546520197}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05715890267781857}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036107945399847245}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05555415843667261}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003611326497090546}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05597836685733972}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036103062857522432}"
10:57:24 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05714825147351946}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003610810566897528}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05798290093654783}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0036099076194523274}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05770979834771701}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003610385150773461}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05781006556107625}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.003610822553412146}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.177
flush and close file /Users/jan/Pychron/data/isotopes/10/d96778-30ac-41b8-b384-3b8da8f25e93.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=3.79170487968 threshold=5.0
Skipping peak center. intensities to small. 3.79170487968<5.0
finished measure script
executed snippet estimated_duration=555.4, duration=586.553603172
jan_unknown400_120.py completed successfully
Measurement Finished
10:57:46 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
10:57:46 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
10:57:46 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.400707960129
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
10:57:46 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-27T10:03:12',
                    'title': 'iServer Hum.',
                    'value': 22.4}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-27T10:55:48',
                     'title': None,
                     'value': 79.275},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-27T10:55:59',
                     'title': None,
                     'value': 79.51762}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-27T04:11:43',
                       'title': None,
                       'value': 69.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-27T10:18:24',
                       'title': 'iServer Temp.',
                       'value': 70.8},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-27T10:54:59',
                       'title': None,
                       'value': 17.9444444444444}]}
persistence save...
persistence save - db
post measurement save
5308031440 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 5308031440
close session 5308031440
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5073191088
MassSpec Database Version: 16.0
close session 5073191088
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bc-02-J
setting aliquot to 985
setting step to 
setting uuid to 10d96778-30ac-41b8-b384-3b8da8f25e93
setting irradpos to bc-02-J
setting extract_device to Fusions CO2
setting tray to 37-hole
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_cocktail
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x138905550> len t=120
baseline Ar41. v=-0.176166130709, e=0.0103742881562
get signal data Ar41 H2
Get data signal Ar41 0.036+/-0.012 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x138905710> len t=120
baseline Ar40. v=0.0582860986964, e=0.00373465792402
get signal data Ar40 H1
Get data signal Ar40 0.349+/-0.008 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x1389058d0> len t=120
baseline Ar39. v=0.105250861629, e=0.00479526096113
get signal data Ar39 AX
Get data signal Ar39 0.006+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x138905a90> len t=120
baseline Ar38. v=-0.0345921615126, e=0.00168545815354
get signal data Ar38 L1
Get data signal Ar38 0.0014+/-0.0023 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x138905c50> len t=120
baseline Ar37. v=-0.0242109485839, e=0.00366251176782
get signal data Ar37 L2
Get data signal Ar37 0.050+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x138905e10> len t=120
baseline Ar36. v=9.88967366067e-06, e=3.39213008065e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00290+/-0.00016 len t=400
bc-02-J-985 added analysis time 0.748606920242s
analysis added to mass spec database
mass spec save time= 0.761
persistence save - dvc
================= post measurement started
create new session 4938282960
close session 4938282960
add to repo msg=modified - jan_unknown400_120.py
add to repo msg=modified - jan_cocktail_x1.py
add to repo msg=modified - jan_pump_ms.py
add to repo msg=modified - jan_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
ahead behind
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-985.json
add to repo msg=modified - -J-985.dat.json
not at valid file /Users/jan/Pychron/data/.dvc/repositories/IR970/bc-02/tags/-J-985.tags.json
not at valid file /Users/jan/Pychron/data/.dvc/repositories/IR970/bc-02/peakcenter/-J-985.peak.json
add to repo msg=modified - -J-985.extr.json
not at valid file /Users/jan/Pychron/data/.dvc/repositories/IR970/bc-02/monitor/-J-985.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-985.inte.json
add to repo msg=modified - -J-985.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-985.blan.json
commit message=<BLANKS> preceding bu-FC-J-8562
add to repo msg=modified - -J-985.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13facf830>
pushing to remote=origin, url=https://github.com
ahead behind
Smart pull ahead: 0 behind: 0
Up-to-date with origin
no changes to meta repo
create new session 4938282960
add association IR970
get identifier "bc-02-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x13b1fb650>
close session 4938282960
================= post measurement finished
10:58:01 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
10:58:01 -- ******* Post Run Check Passed *******
10:58:02 -- Automated run bc-02-J-985 success duration: 674.176 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bc-02-J-985, duration=674.175850868, md5=11334575
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000359058380127
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000149011611938
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.0001380443573
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000116109848022
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000132083892822
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000143051147461
executed snippet estimated_duration=108.0, duration=0.0231461524963
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000342845916748
executed snippet estimated_duration=4.0, duration=0.00782704353333
Script duration 648.0
Run total estimated duration= 649.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:540.0
pump_ms in script context. using previous estimated duration
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
pump_extraction_line in script context. using previous estimated duration
Script duration 648.0
Run total estimated duration= 649.000
loading script "jan_unknown600_180.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=802.2, duration=0.000180959701538
script duration name:unknown600_180 seconds:802.0
loading script "jan_unknown600_180.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.91142272949e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000123977661133
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000172138214111
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000135898590088
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=8.01086425781e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000113010406494
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000116109848022
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.5101852417e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.00016713142395
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000143766403198
executed snippet estimated_duration=250.0, duration=0.0415978431702
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
unknown600_180 in script context. using previous estimated duration
script duration name:unknown600_180 seconds:802.0
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.50746917725e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00016713142395
executed snippet estimated_duration=0.0, duration=0.0101630687714
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown600_180 seconds:802.0
script duration name:sniffair_x2 seconds:250.0
Script duration 1052.0
Run total estimated duration= 1053.000
script duration name:unknown400_120 seconds:540.0
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
nruns=62 before=5.0, run_dur=39202.0, btw=1570.0
write rem/ex queues
/Users/jan/Pychron/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/Pychron/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
add run
