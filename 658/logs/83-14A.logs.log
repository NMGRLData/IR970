do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.00034499168396
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000102043151855
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00010085105896
executed snippet estimated_duration=0.0, duration=0.0178220272064
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000163078308105
executed snippet estimated_duration=4.0, duration=0.00134491920471
Script duration 540.0
Run total estimated duration= 541.000
run duration: 0:09:01
doing event level: 2
21:29:04 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4475714928
close session 4475714928
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65883-14A
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65883-14A
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
21:29:04 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.30933,0.10998,0.15589,-0.06763,0.01126,0.00267
21:29:04 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
21:29:04 -- ******* Pre Extraction Check Passed *******
=================================================================================
21:29:04 -- stopping status monitor. block=True
stop 4938577584
Status monitor stopped
Status monitor finished
21:29:06 -- starting status monitor
start 4938577584
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 21:29:08.125767
Extraction Started jan_co2.py
21:29:08 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12db810b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.20295715332e-05
executed snippet estimated_duration=100.0, duration=0.00245118141174
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.3936920166e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0192351341248
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000107049942017
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
21:29:08 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
21:29:09 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=192.168.2.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
21:29:09 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
21:29:10 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=192.168.2.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
21:29:11 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=192.168.2.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
21:29:11 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=192.168.2.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
21:29:12 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=192.168.2.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=192.168.2.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
21:29:13 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=192.168.2.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
21:29:13 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=6.00346803665
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '2.0') {}
setting motor "beam" to 2.0
set motor beam to 2.0
SetMotor beam,2.0 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('12',) {'autocenter': True}
FusionsCO2 move to position 12
sending GoToHole 12,True
GoToHole 12,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 0.00000,4.80060,1.00000
got position (0.0, 4.8006, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.30139398575
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
21:29:26 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
set extract to 0.5
WaitControl setup for 30.0  
extract (0.5,) {}
GetPosition ===>> 0.00000,4.80060,1.00000
set extraction state FusionsCO2 ON! 0.5(watts) (0.75, 'red', 1.5)
extract sample to 0.5 (watts)
set laser output
{"units":"watts","command":"SetLaserOutput","value":0.5} ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Join finished
block finished. duration 30.3513090611
Interval 1 finished
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.205878973
executed snippet estimated_duration=166.0, duration=80.4592690468
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 12
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-27T20:43:46',
                    'title': 'iServer Hum.',
                    'value': 24.1}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-27T21:29:04',
                     'title': None,
                     'value': 99.975},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-27T21:29:16',
                     'title': None,
                     'value': 101.20708}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-27T19:34:05',
                       'title': None,
                       'value': 70.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-27T21:20:09',
                       'title': 'iServer Temp.',
                       'value': 70.1},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-27T21:21:08',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
21:30:31 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
21:30:31 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.370811206739
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/Pychron/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0555 5.8791 5.9929 6.1940 6.2303 6.6793
Ar39     6.0104 5.7701 6.0570 6.3372 6.1131 6.5658
Ar36     5.6879 5.4391 5.7203 5.9960 5.7680 6.2169
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=65883 analysis type=unknown
Measurement Started jan_unknown400_120.py
21:30:32 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.96
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.258926936459
GetParameter Source Current Readback ===>> 552.049929805286
pre measurement save
New frame /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
testing...
no interpolation path defined
executed snippet estimated_duration=552.28, duration=0.00014591217041
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
creating plots for detectors [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.013+/-0.011
 - setting Ar40 blank 0.403+/-0.007
 - setting Ar36 blank 0.00378+/-0.00017
 - setting Ar37 blank 0.054+/-0.005
 - setting Ar38 blank 0.0074+/-0.0023
 - setting Ar39 blank 0.019+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
molweights={'Ar41': 41.0, 'Ar40': 39.9624, 'Ar42': 42.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'Ar38': 37.9627, 'Ar39': 38.964}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02968323e+00]
H1 map mass to dac 39.9624 >> 5.87909
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.87909) on H1
setting magnet DAC
current  : 5.879091
requested: 5.879090
Delta Dac: 0.000001
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=False
SetMagnetDAC 5.87909 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
21:30:33 -- ******* Equilibration Started *******
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
21:30:33 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x18d5639b0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1861a90b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x16ab10230>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
21:30:36 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 12.0sec
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
measurement period (ms) = 1048.576
Equilibration Finished
21:30:49 -- ******* Equilibration Finished *******
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
refresh_canvas_needed fired
GetIndicatorState R ===>> False
change switch state (True, True)
21:30:49 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
21:30:49 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000152111053467
executed snippet estimated_duration=4.0, duration=0.00131583213806
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000163078308105
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=192.168.2.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.736
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
set_fits () {}
GetIndicatorState R ===>> False
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
change switch state (True, True)
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
21:30:50 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=192.168.2.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
21:30:50 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
starting measurement
measurement period (ms) = 1048.576
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=192.168.2.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=192.168.2.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
21:30:53 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=192.168.2.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
21:30:53 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=192.168.2.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
21:30:54 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=192.168.2.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
21:30:55 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=192.168.2.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
21:30:56 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> 
executed snippet estimated_duration=6.0, duration=8.12812399864
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 
_execute: Traceback (most recent call last):
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/pyscript.py", line 361, in execute_snippet
    func(*argv)
  File "<string>", line 10, in main
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/pyscript.py", line 88, in decorator
    return func(obj, *args, **kw)
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/extraction_line_pyscript.py", line 768, in get_resource_value
    resp = r.get()
  File "/Users/jan/.pychron.0/updates/pychron/extraction_line/pyscript_runner.py", line 123, in get
    resp = self.read()
  File "/Users/jan/.pychron.0/updates/pychron/extraction_line/pyscript_runner.py", line 120, in read
    return float(resp)
ValueError: could not convert string to float: 

Post Equilibration Finished unsuccessfully
21:30:58 -- ******* Post Equilibration Finished unsuccessfully *******
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
The checksum is not correct for this message. Expected: ffff, Actual: 
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
The checksum is not correct for this message. Expected: ffff, Actual: 
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
The checksum is not correct for this message. Expected: ffff, Actual: 
The checksum is not correct for this message. Expected: ffff, Actual: 
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
The checksum is not correct for this message. Expected: ffff, Actual: 
The checksum is not correct for this message. Expected: ffff, Actual: 
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
21:31:16 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
21:31:42 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
21:32:09 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.042739524807375716}"
ask. get packet. error: [Errno 54] Connection reset by peer address: TCP://192.168.2.153:1061
doing retry 0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0421785762612165}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04201784813381661}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04181140057621229}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04221458542091225}"
21:32:35 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0418077492091177}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04147540594656982}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04136613982509915}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041565222159706885}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041221393429441554}"
21:33:01 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041233934923199704}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04155919183247092}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04150654506702955}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041525339032204026}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04124706165932285}"
21:33:28 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041198707254850836}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.041224084085193555}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0409836065333839}"
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04103202948189879}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04083540002033745}"
21:33:54 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040733678010433275}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040721312341587164}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04072638566029917}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04075642184913085}"
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04073734520912528}"
21:34:20 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040525690681561796}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04041766293399962}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040391020834332464}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040387042220208336}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04038270016610883}"
21:34:47 -- collecting point 225
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0402978996154959}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0401599862802772}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04003775861955788}"
no intensity change cnt= 0
signals=[ -0.20829812  15.71320243   0.93182101  -0.05484955   0.05377708
   0.04717389]
prev_signals=[ -0.20829812  15.71320243   0.93182101  -0.05484955   0.05377708
   0.04717389]
resetting no_intensity_change_cnt
signals=[ -0.05285783  15.70130981   0.86513496  -0.02396483  -0.13197689
   0.03515787]
prev_signals=[ -0.20829812  15.71320243   0.93182101  -0.05484955   0.05377708
   0.04717389]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04026974331125582}"
no intensity change cnt= 0
signals=[ -0.03689041  15.79149498   0.88140269  -0.05495562   0.03680115
   0.03664133]
prev_signals=[ -0.03689041  15.79149498   0.88140269  -0.05495562   0.03680115
   0.03664133]
resetting no_intensity_change_cnt
signals=[  0.04306473  15.78353064   0.93038442  -0.07734476   0.13429784
   0.04346524]
prev_signals=[ -0.03689041  15.79149498   0.88140269  -0.05495562   0.03680115
   0.03664133]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04025538335375792}"
21:35:13 -- collecting point 250
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04022003218624045}"
no intensity change cnt= 0
signals=[ -1.20032119e-01   1.57544317e+01   9.28739331e-01  -7.30610019e-03
  -7.44049215e-02   3.90148601e-02]
prev_signals=[ -1.20032119e-01   1.57544317e+01   9.28739331e-01  -7.30610019e-03
  -7.44049215e-02   3.90148601e-02]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040289150947417265}"
resetting no_intensity_change_cnt
signals=[ -4.00653319e-01   1.58112861e+01   9.36374190e-01  -6.80543779e-02
  -1.14450105e-02   3.70863643e-02]
prev_signals=[ -1.20032119e-01   1.57544317e+01   9.28739331e-01  -7.30610019e-03
  -7.44049215e-02   3.90148601e-02]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04026403937474401}"
no intensity change cnt= 0
signals=[  0.10431877  15.86624074   0.83072118  -0.0522601    0.06261973
   0.04124005]
prev_signals=[  0.10431877  15.86624074   0.83072118  -0.0522601    0.06261973
   0.04124005]
resetting no_intensity_change_cnt
signals=[ -1.68841716e-01   1.58546762e+01   9.17942648e-01  -5.26352353e-02
  -8.47792345e-03   4.28718531e-02]
prev_signals=[  0.10431877  15.86624074   0.83072118  -0.0522601    0.06261973
   0.04124005]
no intensity change cnt= 0
signals=[ -0.39119039  15.74946692   0.96820608  -0.04113645   0.07541632
   0.04034997]
prev_signals=[ -0.39119039  15.74946692   0.96820608  -0.04113645   0.07541632
   0.04034997]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04044021157463095}"
resetting no_intensity_change_cnt
signals=[ -0.29541576  15.84904232   0.958842    -0.06918384  -0.01767232
   0.0430202 ]
prev_signals=[ -0.39119039  15.74946692   0.96820608  -0.04113645   0.07541632
   0.04034997]
no intensity change cnt= 0
signals=[ -0.29541576  15.84904232   0.958842    -0.06918384  -0.01767232
   0.0430202 ]
prev_signals=[ -0.29541576  15.84904232   0.958842    -0.06918384  -0.01767232
   0.0430202 ]
resetting no_intensity_change_cnt
signals=[  0.07306389  15.90831575   0.9128575   -0.06178465   0.03980243
   0.03886651]
prev_signals=[ -0.29541576  15.84904232   0.958842    -0.06918384  -0.01767232
   0.0430202 ]
no intensity change cnt= 0
signals=[  0.07306389  15.90831575   0.9128575   -0.06178465   0.03980243
   0.03886651]
prev_signals=[  0.07306389  15.90831575   0.9128575   -0.06178465   0.03980243
   0.03886651]
resetting no_intensity_change_cnt
signals=[ -0.13964749  15.94094481   0.82679788  -0.05250185   0.10722241
   0.04257516]
prev_signals=[  0.07306389  15.90831575   0.9128575   -0.06178465   0.03980243
   0.03886651]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04058821986868446}"
21:35:39 -- collecting point 275
no intensity change cnt= 0
signals=[ -0.09619662  15.84558238   1.01188787  -0.02305322   0.05106898
   0.03649298]
prev_signals=[ -0.09619662  15.84558238   1.01188787  -0.02305322   0.05106898
   0.03649298]
resetting no_intensity_change_cnt
signals=[ -1.46261885e-01   1.58277957e+01   9.10506145e-01  -7.55686816e-02
  -1.80434202e-03   4.00532811e-02]
prev_signals=[ -0.09619662  15.84558238   1.01188787  -0.02305322   0.05106898
   0.03649298]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040538453247441805}"
no intensity change cnt= 0
signals=[ -0.18948241  16.03069475   0.80239366  -0.05821822   0.03182098
   0.03545456]
prev_signals=[ -0.18948241  16.03069475   0.80239366  -0.05821822   0.03182098
   0.03545456]
resetting no_intensity_change_cnt
signals=[ -0.18549115  15.95255722   0.98567677  -0.05448724   0.08885049
   0.03916321]
prev_signals=[ -0.18948241  16.03069475   0.80239366  -0.05821822   0.03182098
   0.03545456]
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
no intensity change cnt= 0
signals=[ -0.03095959  15.85871529   0.93927073  -0.03197835  -0.09223657
   0.04005328]
prev_signals=[ -0.03095959  15.85871529   0.93927073  -0.03197835  -0.09223657
   0.04005328]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0404418829980569}"
resetting no_intensity_change_cnt
signals=[ -0.32300896  15.94547633   0.88755156  -0.0660534    0.10165609
   0.03664133]
prev_signals=[ -0.03095959  15.85871529   0.93927073  -0.03197835  -0.09223657
   0.04005328]
no intensity change cnt= 0
signals=[ -0.124936    15.99442115   0.9858968   -0.06014573   0.06816722
   0.04049832]
prev_signals=[ -0.124936    15.99442115   0.9858968   -0.06014573   0.06816722
   0.04049832]
resetting no_intensity_change_cnt
signals=[ -0.25641905  15.94980205   0.92563458  -0.03414433   0.03779069
   0.03990494]
prev_signals=[ -0.124936    15.99442115   0.9858968   -0.06014573   0.06816722
   0.04049832]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040412290386812044}"
no intensity change cnt= 0
signals=[ -0.12630452  15.9189722    0.85157866  -0.04502369   0.0428038
   0.03708636]
prev_signals=[ -0.12630452  15.9189722    0.85157866  -0.04502369   0.0428038
   0.03708636]
resetting no_intensity_change_cnt
signals=[ -0.3865159   15.94448505   0.95727754  -0.07481982   0.06792791
   0.03886651]
prev_signals=[ -0.12630452  15.9189722    0.85157866  -0.04502369   0.0428038
   0.03708636]
no intensity change cnt= 0
signals=[ -2.59725854e-01   1.60152486e+01   9.39850045e-01  -4.56171879e-02
  -6.79327063e-03   3.66413269e-02]
prev_signals=[ -2.59725854e-01   1.60152486e+01   9.39850045e-01  -4.56171879e-02
  -6.79327063e-03   3.66413269e-02]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040363284656207754}"
resetting no_intensity_change_cnt
signals=[ -1.98263122e-01   1.60224951e+01   9.16900113e-01  -5.45444445e-02
   4.71754477e-03   4.02016269e-02]
prev_signals=[ -2.59725854e-01   1.60152486e+01   9.39850045e-01  -4.56171879e-02
  -6.79327063e-03   3.66413269e-02]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04037521924415851}"
21:36:06 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04036545788748052}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04030651538913786}"
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040241680799908336}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040128871134447325}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040165997358201824}"
21:36:32 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04022093062746683}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0402982253776888}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040200474552171954}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.04017578191889222}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040131835643105386}"
21:36:58 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0401312431393704}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040117683442060216}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.040007432811392366}"
The checksum is not correct for this message. Expected: ffff, Actual: 
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03993577470489229}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039921377200458054}"
21:37:25 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039878667406737775}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03983483673265373}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039779441476257664}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03970294229408168}"
The checksum is not correct for this message. Expected: ffff, Actual: 
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06177604711951249}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039740687209831045}"
21:37:51 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :421.338
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02968323e+00]
H1 map mass to dac 34.2 >> 5.24120160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.24120160773) on H1
setting magnet DAC
current  : 5.879090
requested: 5.241202
Delta Dac: 0.637888
Checking detector protection. dv=0.63789
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
AF Demag not enabled. self.use_af_demag=False, use_af_demag=False
SetMagnetDAC 5.24120160773 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
measurement period (ms) = 1048.576
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04450071473803836}"
The checksum is not correct for this message. Expected: ffff, Actual: 
ask. get packet. error: [Errno 54] Connection reset by peer address: TCP://192.168.2.153:1061
doing retry 0
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.029874306100921337}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.047585916342699375}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04726468512379292}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04845328980746897}"
21:38:36 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.056027964353726686}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05039732531995933}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05109917093815403}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0554087552566676}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05619487895503003}"
21:39:03 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.053296383997094486}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05454306913991489}"
The checksum is not correct for this message. Expected: ffff, Actual: 
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05240700005985513}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05089578103317597}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04815738233553001}"
21:39:29 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.049818465956165216}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0397404664970763}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05018701323273241}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03974124890796718}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.049630568258540814}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039741943407522}"
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05005375882133638}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03974256402414546}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.050888699227673154}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03974312195222109}"
21:39:55 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0511379700161391}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.03974362623336638}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.051225546092057095}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039744084250186405}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05111377187552002}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0397445020900924}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.050678434715048175}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.039744884817401245}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.507
flush and close file /Users/jan/Pychron/data/isotopes/0b/4f7496-5b0f-4007-b700-5433a2593d69.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=16.461177534 threshold=5.0
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x18642d0b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x130c73b90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x18642d0b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x130c73b90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x18642d0b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x130c73b90>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02968323e+00]
H1 map mass to dac 39.9624 >> 5.87909
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x12cfbe1d0>
doing pc
starting peak center. center dac= 5.87909 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87909 width=0.03000 (5.86409 - 5.89409)
Moving to starting dac 5.86409
setting magnet DAC
current  : 5.241202
requested: 5.864090
Delta Dac: 0.622888
Checking detector protection. dv=0.62289
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86409 ===>> OK
Magnet settling time: 0.500 0.500
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
The checksum is not correct for this message. Expected: ffff, Actual: 
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0282853558758. timeout= 10
no intensity change cnt= 0
signals=[ 0.17333406  0.06514816  0.1652223   0.00206368 -0.02811542  0.        ]
prev_signals=[ 0.17333406  0.06514816  0.1652223   0.00206368 -0.02811542  0.        ]
resetting no_intensity_change_cnt
signals=[ 0.60213889  0.4710412   0.06250864 -0.05404028 -0.09497291  0.        ]
prev_signals=[ 0.17333406  0.06514816  0.1652223   0.00206368 -0.02811542  0.        ]
no intensity change cnt= 0
signals=[ 0.60213889  0.4710412   0.06250864 -0.05404028 -0.09497291  0.        ]
prev_signals=[ 0.60213889  0.4710412   0.06250864 -0.05404028 -0.09497291  0.        ]
resetting no_intensity_change_cnt
signals=[-0.15435875  0.15941939  0.06879034 -0.10206707 -0.01840044  0.        ]
prev_signals=[ 0.60213889  0.4710412   0.06250864 -0.05404028 -0.09497291  0.        ]
no intensity change cnt= 0
signals=[-0.15435875  0.15941939  0.06879034 -0.10206707 -0.01840044  0.        ]
prev_signals=[-0.15435875  0.15941939  0.06879034 -0.10206707 -0.01840044  0.        ]
resetting no_intensity_change_cnt
signals=[-0.01282473  0.09929363  0.10689266 -0.11291073 -0.02864787  0.        ]
prev_signals=[-0.15435875  0.15941939  0.06879034 -0.10206707 -0.01840044  0.        ]
no intensity change cnt= 0
signals=[-0.01282473  0.09929363  0.10689266 -0.11291073 -0.02864787  0.        ]
prev_signals=[-0.01282473  0.09929363  0.10689266 -0.11291073 -0.02864787  0.        ]
resetting no_intensity_change_cnt
signals=[-0.44580045  0.1322575   0.12740841 -0.11128099 -0.0664219   0.        ]
prev_signals=[-0.01282473  0.09929363  0.10689266 -0.11291073 -0.02864787  0.        ]
no intensity change cnt= 0
signals=[-0.44580045  0.1322575   0.12740841 -0.11128099 -0.0664219   0.        ]
prev_signals=[-0.44580045  0.1322575   0.12740841 -0.11128099 -0.0664219   0.        ]
resetting no_intensity_change_cnt
signals=[-0.24079712  0.06247713  0.11290048 -0.09979198  0.0699947   0.        ]
prev_signals=[-0.44580045  0.1322575   0.12740841 -0.11128099 -0.0664219   0.        ]
no intensity change cnt= 0
signals=[-0.24079712  0.06247713  0.11290048 -0.09979198  0.0699947   0.        ]
prev_signals=[-0.24079712  0.06247713  0.11290048 -0.09979198  0.0699947   0.        ]
resetting no_intensity_change_cnt
signals=[-0.27945239  0.09259004  0.1377775  -0.06608554  0.12111795  0.        ]
prev_signals=[-0.24079712  0.06247713  0.11290048 -0.09979198  0.0699947   0.        ]
no intensity change cnt= 0
signals=[-0.27945239  0.09259004  0.1377775  -0.06608554  0.12111795  0.        ]
prev_signals=[-0.27945239  0.09259004  0.1377775  -0.06608554  0.12111795  0.        ]
resetting no_intensity_change_cnt
signals=[ 0.00839007  0.00650907  0.08533217 -0.08540695 -0.02271471  0.        ]
prev_signals=[-0.27945239  0.09259004  0.1377775  -0.06608554  0.12111795  0.        ]
Peak center baseline intensity achieved
_do_sweep sm= 5.86409, em= 5.89409, stm= 0.001
calculated step values: start=5.86409, end=5.89409, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.864090
requested: 5.864090
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86409 ===>> OK
set_dac. change=False
no intensity change cnt= 0
signals=[ 0.00839007  0.00650907  0.08533217 -0.08540695 -0.02271471  0.        ]
prev_signals=[ 0.00839007  0.00650907  0.08533217 -0.08540695 -0.02271471  0.        ]
setting magnet DAC
current  : 5.864090
requested: 5.865124
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86512448276 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
resetting no_intensity_change_cnt
signals=[-0.1675873   0.0860658   0.10139255 -0.0489249  -0.01531403  0.        ]
prev_signals=[ 0.00839007  0.00650907  0.08533217 -0.08540695 -0.02271471  0.        ]
setting magnet DAC
current  : 5.865124
requested: 5.866159
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86615896552 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866159
requested: 5.867193
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86719344828 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867193
requested: 5.868228
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86822793103 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868228
requested: 5.869262
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.86926241379 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869262
requested: 5.870297
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87029689655 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870297
requested: 5.871331
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87133137931 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871331
requested: 5.872366
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87236586207 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872366
requested: 5.873400
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87340034483 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873400
requested: 5.874435
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87443482759 ===>> OK
Magnet settling time: 2.097 0.500
The checksum is not correct for this message. Expected: ffff, Actual: 
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874435
requested: 5.875469
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87546931034 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875469
requested: 5.876504
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.8765037931 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876504
requested: 5.877538
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87753827586 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877538
requested: 5.878573
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87857275862 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878573
requested: 5.879607
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.87960724138 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879607
requested: 5.880642
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88064172414 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880642
requested: 5.881676
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.8816762069 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881676
requested: 5.882711
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88271068966 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882711
requested: 5.883745
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88374517241 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883745
requested: 5.884780
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88477965517 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884780
requested: 5.885814
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88581413793 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885814
requested: 5.886849
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88684862069 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886849
requested: 5.887883
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88788310345 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887883
requested: 5.888918
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88891758621 ===>> OK
Magnet settling time: 2.097 0.500
The checksum is not correct for this message. Expected: ffff, Actual: 
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888918
requested: 5.889952
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.88995206897 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889952
requested: 5.890987
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.89098655172 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890987
requested: 5.892021
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.89202103448 ===>> OK
Magnet settling time: 2.097 0.500
invalid checksum "". error=invalid literal for int() with base 10: ''
State checksums do not match. Local:-860229079 Remote:None
State checksum failed
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892021
requested: 5.893056
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.89305551724 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.893056
requested: 5.894090
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
AF Demag not enabled. self.use_af_demag=False, use_af_demag=True
SetMagnetDAC 5.89409 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
_execute: Traceback (most recent call last):
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/pyscript.py", line 361, in execute_snippet
    func(*argv)
  File "<string>", line 83, in main
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/pyscript.py", line 88, in decorator
    return func(obj, *args, **kw)
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/measurement_pyscript.py", line 371, in peak_center
    save=save, config_name=config_name)
  File "/Users/jan/.pychron.0/updates/pychron/pyscripts/measurement_pyscript.py", line 905, in _automated_run_call
    return func(*args, **kw)
  File "/Users/jan/.pychron.0/updates/pychron/experiment/automated_run/automated_run.py", line 626, in py_peak_center
    ion.do_peak_center(new_thread=False, save=save, message='automated run peakcenter', timeout=300)
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/ion_optics/ion_optics_manager.py", line 170, in do_peak_center
    self._peak_center(*args)
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/ion_optics/ion_optics_manager.py", line 360, in _peak_center
    dac_d = pc.get_peak_center()
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/jobs/peak_center.py", line 113, in get_peak_center
    center, smart_shift, success = self.iteration(start, end, width)
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/jobs/peak_center.py", line 216, in iteration
    result = self._calculate_peak_center(dac_values, intensities)
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/jobs/peak_center.py", line 325, in _calculate_peak_center
    x, y = self._interpolate(x, y)
  File "/Users/jan/.pychron.0/updates/pychron/spectrometer/jobs/peak_center.py", line 318, in _interpolate
    f = interpolate.interp1d(x, y, kind=self.interpolation_kind)
  File "/Users/jan/anaconda/envs/pychron_env/Pychron.app/Contents/lib/python2.7/site-packages/scipy/interpolate/interpolate.py", line 451, in __init__
    self._y = self._reshape_yi(self.y)
  File "/Users/jan/anaconda/envs/pychron_env/Pychron.app/Contents/lib/python2.7/site-packages/scipy/interpolate/polyint.py", line 112, in _reshape_yi
    return yi.reshape((yi.shape[0], -1))
ValueError: total size of new array must be unchanged

Post Measurement Started jan_pump_ms.py
21:41:31 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=192.168.2.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
21:41:31 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.377902030945
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
21:41:31 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
21:41:31 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
21:41:31 -- Automated run 65883-14A failed duration: 747.187 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=47
write rem/ex queues
/Users/jan/Pychron/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/Pychron/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
add run
